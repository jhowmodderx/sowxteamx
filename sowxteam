local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/Rayfield-Roblox/Rayfield/main/source.lua"))() -- Rayfield library
local _ENV = (getgenv or getrenv or getfenv)()

-- Rayfield Window Configuration
local Window = Rayfield:CreateWindow({
    Name = "SOWxTEAM By RodrigoGTyx",
    LoadingTitle = "Loading SOWxTEAM...",
    LoadingSubtitle = "By RodrigoGTyx",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil, -- Saves configuration in the user's default folder
        FileName = "SOWxTEAM_Config"
    },
    Discord = {
        Enabled = true,
        Invite = "https://discord.gg/your_invite_link", -- Add your discord invite link here
        RememberJoins = true
    },
    KeySystem = false, -- Key system is disabled
})

-- Creating Tabs
local Tabs = {
    Main = Window:CreateTab("Main", 4483362458), -- Tab for main functionality
    Settings = Window:CreateTab("Settings", 4483362458), -- Tab for settings or configurations
}

-- Add Sections to the Main Tab
Tabs.Main:CreateSection("Auto Farm Settings")
Tabs.Main:CreateToggle("Auto Farm", {
    Text = "Enable Auto Farm",
    Default = false,
    Callback = function(Value)
        _ENV.OnFarm = Value
        if Value then
            task.spawn(function()
                while task.wait(Settings.dSpeed) and _ENV.OnFarm do
                    if not c(Player.Character) then
                        repeat
                            task.wait(0.5)
                        until c(Player.Character)
                        task.wait(0.2)
                        continue
                    end
                    local CurrentQuest = a()
                    if not CurrentQuest then
                        continue
                    end
                    if not ten(CurrentQuest.Target) then
                        ete(CurrentQuest.NpcName, CurrentQuest.Id)
                        continue
                    end
                    local Enemy = clst(CurrentQuest.Target)
                    if not Enemy then
                        continue
                    end
                    CurrentTarget = Enemy
                    local HumanoidRootPart = Enemy:FindFirstChild("HumanoidRootPart")
                    local Humanoid = Enemy:FindFirstChild("Humanoid")
                    if HumanoidRootPart and Humanoid and Humanoid.Health > 0 then
                        if _ENV.BringMob then
                            brnge(CurrentQuest.Target, HumanoidRootPart.CFrame)
                        end
                        local targetCFrame = HumanoidRootPart.CFrame * CFrame.new(0, 7.5, 0) * CFrameAngle
                        if not tepe(targetCFrame) then
                            if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
                                Player.Character.HumanoidRootPart.CFrame = targetCFrame
                            end
                        end
                        task.wait(0)
                        local AllQuestEnemies = pgaall(CurrentQuest.Target)
                        if # AllQuestEnemies > 0 then
                            faz(AllQuestEnemies)
                        end
                        d()
                    end
                end
            end)
        end
    end
})

Tabs.Main:CreateSection("Tool Settings")
local ToolDropdown = Tabs.Main:CreateDropdown("ToolDropdown", {
    Text = "Select Tool",
    List = {},
    Callback = function(SelectedTool)
        Settings.SelectedTool = SelectedTool
        EquipCombat(true)
    end
})

Tabs.Main:CreateToggle("Auto Equip Tool", {
    Text = "Auto Equip Tool",
    Default = false,
    Callback = function(Value)
        Settings.ToolToggle = Value
        EquipCombat(Value)
    end
})

Tabs.Main:CreateButton("Refresh Tools", {
    Text = "Refresh Tools List",
    Callback = function()
        RefreshTools()
    end
})

Tabs.Main:CreateSection("Miscellaneous Settings")
Tabs.Main:CreateToggle("BringMob", {
    Text = "Bring Mob (Current Quest)",
    Default = false,
    Callback = function(Value)
        _ENV.BringMob = Value
    end
})

Tabs.Main:CreateButton("Teleport to Island", {
    Text = "Teleport to Island",
    Callback = function()
        -- Add teleport logic here
    end
})

-- Settings Tab for customizing
Tabs.Settings:CreateSection("Customization")
Tabs.Settings:CreateColorPicker("UI Color", {
    Text = "Choose UI Color",
    Default = Color3.fromRGB(255, 0, 0), -- Default color
    Callback = function(Color)
        Rayfield:SetUIColor(Color)
    end
})

-- Initialize Rayfield
Rayfield:Initialize()

-- Add your existing functions and script components here for full functionality.
-- Ensure that all other parts of your script work as expected with the Rayfield framework.

-- Funções para o script (exemplo)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local CombatEvent = ReplicatedStorage.BetweenSides.Remotes.Events.CombatEvent
local QuestsDecriptions = require(ReplicatedStorage.MainModules.Essentials.QuestDescriptions)

-- Função para verificar o estado de vida do personagem
local function c(Character)
    if Character then
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        return Humanoid and Humanoid.Health > 0
    end
end

-- Função para ativar a ferramenta equipada
local function d()
    if not c(Player.Character) then
        return
    end
    local Tool = Player.Character:FindFirstChildOfClass("Tool")
    if not Tool then
        return
    end
    Tool:Activate()
end

-- Função para causar dano no inimigo
local function faz(Enemies)
    CombatEvent:FireServer("DealDamage", {
        CallTime = workspace:GetServerTimeNow(),
        DelayTime = 0,
        Combo = 1,
        Results = Enemies,
        Damage = math.random(50, 150),
        CriticalHit = math.random(1, 10) <= 3
    })
end

-- Função para pegar o inimigo mais próximo
local function clst(EnemyName)
    local AllEnemies = pgaall(EnemyName)
    if # AllEnemies == 0 then
        return nil
    end
    local ClosestEnemy = nil
    local ShortestDistance = math.huge
    for i, Enemy in ipairs(AllEnemies) do
        local RootPart = Enemy:FindFirstChild("HumanoidRootPart")
        local Humanoid = Enemy:FindFirstChild("Humanoid")
        if RootPart and Humanoid and Humanoid.Health > 0 then
            local Distance = Player:DistanceFromCharacter(RootPart.Position)
            if Distance < ShortestDistance then
                ShortestDistance = Distance
                ClosestEnemy = Enemy
            end
        end
    end
    return ClosestEnemy
end

-- Função para buscar e trazer inimigos
local function brnge(EnemyName, TargetPosition)
    if not _ENV.BringMob then
        return 0
    end
    local AllEnemies = pgaall(EnemyName)
    local BroughtCount = 0
    for i, Enemy in ipairs(AllEnemies) do
        local RootPart = Enemy:FindFirstChild("HumanoidRootPart")
        local Humanoid = Enemy:FindFirstChild("Humanoid")
        if RootPart and Humanoid and Humanoid.Health > 0 then
            RootPart.CFrame = TargetPosition
            BroughtCount = BroughtCount + 1
        end
    end
    return BroughtCount
end

-- Funções para gerenciamento de ferramentas
local function RefreshTools()
    local tools = {}
    if Player and Player:FindFirstChild("Backpack") then
        for _, tool in ipairs(Player.Backpack:GetChildren()) do
            if tool:IsA("Tool") then
                table.insert(tools, tool.Name)
            end
        end
    end
    ToolDropdown:SetList(tools)
end

-- Chamando as funções de teleporte e funções de combate
Tabs.Main:CreateButton("Activate Combat", {
    Text = "Activate Combat",
    Callback = function()
        local Enemy = clst("EnemyName")
        if Enemy then
            faz({Enemy})
        end
    end
})

Tabs.Main:CreateButton("Teleport to Enemy", {
    Text = "Teleport to Nearest Enemy",
    Callback = function()
        local Enemy = clst("EnemyName")
        if Enemy then
            tepe(Enemy.HumanoidRootPart.CFrame)
        end
    end
})
