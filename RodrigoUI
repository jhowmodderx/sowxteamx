-- SOWxTEAM Hub - UI completo, funcional e estilizado
-- Coloque este LocalScript em StarterPlayerScripts

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

if not player then
    return
end

-- Configs
local WINDOW_SIZE = UDim2.new(0, 720, 0, 440)
local WINDOW_POS = UDim2.new(0.12, 0, 0.18, 0)
local SIDEBAR_WIDTH = 170

-- Helpers
local function tween(obj, props, time, style, dir)
    style = style or Enum.EasingStyle.Quad
    dir = dir or Enum.EasingDirection.Out
    local ti = TweenInfo.new(time or 0.25, style, dir)
    local tw = TweenService:Create(obj, ti, props)
    tw:Play()
    return tw
end





-- Remove old if existir (evita duplicar)
local existing = player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild("SOWxTEAM_Hub")
if existing then existing:Destroy() end

-- ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SOWxTEAM_Hub"
screenGui.ResetOnSpawn = false
screenGui.IgnoreGuiInset = true
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main window
local main = Instance.new("Frame")
main.Name = "MainWindow"
main.Size = WINDOW_SIZE
main.Position = WINDOW_POS
main.AnchorPoint = Vector2.new(0, 0)
main.BackgroundColor3 = Color3.fromRGB(20,20,20)
main.BorderSizePixel = 0
main.Parent = screenGui
main.Active = true
main.Draggable = true

local mainCorner = Instance.new("UICorner", main)
mainCorner.CornerRadius = UDim.new(0, 10)

-- Topbar
local topbar = Instance.new("Frame")
topbar.Name = "TopBar"
topbar.Size = UDim2.new(1, 0, 0, 44)
topbar.Position = UDim2.new(0, 0, 0, 0)
topbar.BackgroundColor3 = Color3.fromRGB(28,28,28)
topbar.Parent = main

local topCorner = Instance.new("UICorner", topbar)
topCorner.CornerRadius = UDim.new(0, 10)

-- Logo (flutuante imagem)
local logo = Instance.new("ImageLabel")
logo.Name = "Logo"
logo.Size = UDim2.new(0, 28, 0, 28)
logo.Position = UDim2.new(0, 8, 0.5, -14)
logo.Image = "rbxassetid://125930606242191" -- fornecido
logo.BackgroundTransparency = 1
logo.Parent = topbar

-- Title
local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(0.5, 0, 1, 0)
title.Position = UDim2.new(0, 44, 0, 0)
title.BackgroundTransparency = 1
title.Text = "SOWxTEAM Hub"
title.TextColor3 = Color3.fromRGB(240,240,240)
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = topbar

-- Control buttons container
local controlHolder = Instance.new("Frame")
controlHolder.Size = UDim2.new(0, 120, 1, 0)
controlHolder.BackgroundTransparency = 1
controlHolder.Position = UDim2.new(1, -124, 0, 0)
controlHolder.Parent = topbar

local function makeControlButton(name, posX, color)
    local btn = Instance.new("TextButton")
    btn.Name = name
    btn.Size = UDim2.new(0, 32, 0, 32)
    btn.Position = UDim2.new(0, posX, 0.5, -16)
    btn.AutoButtonColor = false
    btn.BackgroundColor3 = color
    btn.Text = ""
    btn.Parent = controlHolder
    local c = Instance.new("UICorner", btn)
    c.CornerRadius = UDim.new(1, 0)
    return btn
end

local minBtn = makeControlButton("Minimize", 8, Color3.fromRGB(70,70,70))
local maxBtn = makeControlButton("Maximize", 44, Color3.fromRGB(70,70,70))
local closeBtn = makeControlButton("Close", 80, Color3.fromRGB(200,70,70))

-- Sidebar
local sidebar = Instance.new("Frame")
sidebar.Name = "Sidebar"
sidebar.Size = UDim2.new(0, SIDEBAR_WIDTH, 1, -44)
sidebar.Position = UDim2.new(0, 0, 0, 44)
sidebar.BackgroundColor3 = Color3.fromRGB(30, 16, 40)
sidebar.BorderSizePixel = 0
sidebar.Parent = main

local sidebarCorner = Instance.new("UICorner", sidebar)
sidebarCorner.CornerRadius = UDim.new(0, 10)

-- Apply gradient to sidebar (purple -> black)
local sidebarGrad = Instance.new("UIGradient", sidebar)
sidebarGrad.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(120,10,120)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(10,10,10))
}
sidebarGrad.Rotation = 0

-- Sidebar title / avatar area
local sideTop = Instance.new("Frame", sidebar)
sideTop.Size = UDim2.new(1, 0, 0, 120)
sideTop.BackgroundTransparency = 1

local hubLabel = Instance.new("TextLabel", sideTop)
hubLabel.Text = "SOWxTEAM"
hubLabel.Size = UDim2.new(1, -20, 0, 36)
hubLabel.Position = UDim2.new(0, 10, 0, 10)
hubLabel.BackgroundTransparency = 1
hubLabel.TextColor3 = Color3.fromRGB(240,240,240)
hubLabel.Font = Enum.Font.GothamBold
hubLabel.TextSize = 20
hubLabel.TextXAlignment = Enum.TextXAlignment.Left

local hubSub = Instance.new("TextLabel", sideTop)
hubSub.Text = "Hub"
hubSub.Size = UDim2.new(1, -20, 0, 20)
hubSub.Position = UDim2.new(0, 10, 0, 46)
hubSub.BackgroundTransparency = 1
hubSub.TextColor3 = Color3.fromRGB(200,200,200)
hubSub.Font = Enum.Font.Gotham
hubSub.TextSize = 14
hubSub.TextXAlignment = Enum.TextXAlignment.Left

-- Menu buttons container
local menuHolder = Instance.new("Frame", sidebar)
menuHolder.Name = "MenuHolder"
menuHolder.Size = UDim2.new(1, -10, 1, -140)
menuHolder.Position = UDim2.new(0, 5, 0, 130)
menuHolder.BackgroundTransparency = 1

local menuList = Instance.new("UIListLayout", menuHolder)
menuList.SortOrder = Enum.SortOrder.LayoutOrder
menuList.Padding = UDim.new(0, 8)

-- Content area
local content = Instance.new("Frame")
content.Name = "Content"
content.Size = UDim2.new(1, -SIDEBAR_WIDTH, 1, -44)
content.Position = UDim2.new(0, SIDEBAR_WIDTH, 0, 44)
content.BackgroundColor3 = Color3.fromRGB(24,24,24)
content.BorderSizePixel = 0
content.Parent = main

local contentCorner = Instance.new("UICorner", content)
contentCorner.CornerRadius = UDim.new(0, 8)

-- content gradient subtle
local contentGrad = Instance.new("UIGradient", content)
contentGrad.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(28,28,28)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(18,18,18))
}
contentGrad.Rotation = 0
contentGrad.Transparency = NumberSequence.new(0)

-- Pages table
local Pages = {}

-- Switch page (animated)
local function SwitchPage(name)
    for k,v in pairs(Pages) do
        if v.Visible and k ~= name then
            -- slide out
            tween(v, {Position = UDim2.new(1,0,0,0)}, 0.28)
            task.delay(0.28, function()
                v.Visible = false
                v.Position = UDim2.new(0,0,0,0)
            end)
        end
    end
    local to = Pages[name]
    if to then
        to.Visible = true
        to.Position = UDim2.new(-1,0,0,0)
        tween(to, {Position = UDim2.new(0,0,0,0)}, 0.28)
    end
end

-- CreatePage helper (returns holder where you add elements)
local function CreatePage(name)
    local page = Instance.new("Frame")
    page.Name = name
    page.Size = UDim2.new(1, 0, 1, 0)
    page.BackgroundTransparency = 1
    page.Visible = false
    page.Parent = content

    local holder = Instance.new("Frame")
    holder.Name = "Holder"
    holder.Size = UDim2.new(1, -20, 1, -20)
    holder.Position = UDim2.new(0, 10, 0, 10)
    holder.BackgroundTransparency = 1
    holder.Parent = page

    local layout = Instance.new("UIListLayout", holder)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 12)

    Pages[name] = page
    return holder
end

-- Menu button creator (with hover)
local function CreateMenuButton(name, onClick)
    local btn = Instance.new("TextButton")
    btn.Name = "Btn_"..name
    btn.Size = UDim2.new(1, -10, 0, 44)
    btn.BackgroundColor3 = Color3.fromRGB(36,28,48)
    btn.Text = name
    btn.TextColor3 = Color3.fromRGB(230,230,230)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 16
    btn.AutoButtonColor = false
    btn.Parent = menuHolder

    local corner = Instance.new("UICorner", btn)
    corner.CornerRadius = UDim.new(0, 8)

    local leftStrip = Instance.new("Frame", btn)
    leftStrip.Size = UDim2.new(0, 6, 1, 0)
    leftStrip.Position = UDim2.new(0, 0, 0, 0)
    leftStrip.BackgroundColor3 = Color3.fromRGB(60,10,120)
    leftStrip.Visible = false
    local leftCorner = Instance.new("UICorner", leftStrip)
    leftCorner.CornerRadius = UDim.new(0, 8)

    btn.MouseEnter:Connect(function()
        tween(btn, {BackgroundColor3 = Color3.fromRGB(58,42,72)}, 0.15)
    end)
    btn.MouseLeave:Connect(function()
        tween(btn, {BackgroundColor3 = Color3.fromRGB(36,28,48)}, 0.15)
    end)

    btn.MouseButton1Click:Connect(function()
        -- show indicator briefly
        leftStrip.Visible = true
        tween(leftStrip, {Size = UDim2.new(0,6,1,0)}, 0.08)
        -- deactivate others
        for _,child in pairs(menuHolder:GetChildren()) do
            if child:IsA("TextButton") and child ~= btn then
                local ls = child:FindFirstChildWhichIsA("Frame")
                if ls then ls.Visible = false end
            end
        end
        pcall(onClick)
    end)
    return btn
end

-- Toggle creator (rodinha)
local function CreateToggle(parent, labelText, defaultState, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 44)
    frame.BackgroundTransparency = 1
    frame.Parent = parent

    local label = Instance.new("TextLabel", frame)
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = labelText
    label.TextColor3 = Color3.fromRGB(230,230,230)
    label.Font = Enum.Font.Gotham
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left

    local switchBtn = Instance.new("TextButton", frame)
    switchBtn.Size = UDim2.new(0, 56, 0, 28)
    switchBtn.Position = UDim2.new(1, -66, 0.5, -14)
    switchBtn.BackgroundColor3 = Color3.fromRGB(50,50,50)
    switchBtn.AutoButtonColor = false
    switchBtn.Text = ""
    local sCorner = Instance.new("UICorner", switchBtn)
    sCorner.CornerRadius = UDim.new(1, 0)

    local knob = Instance.new("Frame", switchBtn)
    knob.Size = UDim2.new(0, 22, 0, 22)
    knob.Position = defaultState and UDim2.new(1, -24, 0.5, -11) or UDim2.new(0, 4, 0.5, -11)
    knob.BackgroundColor3 = Color3.fromRGB(230,230,230)
    local kCorner = Instance.new("UICorner", knob)
    kCorner.CornerRadius = UDim.new(1, 0)

    local enabled = defaultState or false
    if enabled then
        switchBtn.BackgroundColor3 = Color3.fromRGB(120, 40, 200)
        knob.BackgroundColor3 = Color3.fromRGB(255,255,255)
    end

    switchBtn.MouseButton1Click:Connect(function()
        enabled = not enabled
        local targetPos = enabled and UDim2.new(1, -24, 0.5, -11) or UDim2.new(0, 4, 0.5, -11)
        tween(knob, {Position = targetPos}, 0.18)
        tween(switchBtn, {BackgroundColor3 = enabled and Color3.fromRGB(120, 40, 200) or Color3.fromRGB(50,50,50)}, 0.18)
        pcall(callback, enabled)
    end)
end

-- Create a couple of example pages (skeleton only)
local pageMain = CreatePage("Main")
do
    local header = Instance.new("TextLabel", pageMain)
    header.Text = "Main"
    header.Size = UDim2.new(1, 0, 0, 36)
    header.BackgroundTransparency = 1
    header.TextColor3 = Color3.fromRGB(245,245,245)
    header.Font = Enum.Font.GothamBold
    header.TextSize = 20
    header.TextXAlignment = Enum.TextXAlignment.Left

    local desc = Instance.new("TextLabel", pageMain)
    desc.Text = "Bem-vindo ao SOWxTEAM Hub — exemplos de sections e toggles."
    desc.Size = UDim2.new(1, 0, 0, 20)
    desc.Position = UDim2.new(0, 0, 0, 36)
    desc.BackgroundTransparency = 1
    desc.TextColor3 = Color3.fromRGB(200,200,200)
    desc.Font = Enum.Font.Gotham
    desc.TextSize = 14
    desc.TextXAlignment = Enum.TextXAlignment.Left
    desc.RichText = false

    -- Spacing frame to push toggles down
    local holder = Instance.new("Frame", pageMain)
    holder.Size = UDim2.new(1, 0, 1, -80)
    holder.BackgroundTransparency = 1
    holder.Position = UDim2.new(0, 0, 0, 64)

    local layout = Instance.new("UIListLayout", holder)
    layout.Padding = UDim.new(0, 12)
    layout.SortOrder = Enum.SortOrder.LayoutOrder

    -- Example toggles
    CreateToggle(holder, "Example Toggle A", false, function(state) print("Example Toggle A:", state) end)
    CreateToggle(holder, "Example Toggle B", true, function(state) print("Example Toggle B:", state) end)
    CreateToggle(holder, "Example Toggle C", false, function(state) print("Example Toggle C:", state) end)
end

local pageSettings = CreatePage("Settings")
do
    local header = Instance.new("TextLabel", pageSettings)
    header.Text = "Settings"
    header.Size = UDim2.new(1, 0, 0, 36)
    header.BackgroundTransparency = 1
    header.TextColor3 = Color3.fromRGB(245,245,245)
    header.Font = Enum.Font.GothamBold
    header.TextSize = 20
    header.TextXAlignment = Enum.TextXAlignment.Left

    local holder = Instance.new("Frame", pageSettings)
    holder.Size = UDim2.new(1, 0, 1, -80)
    holder.BackgroundTransparency = 1
    holder.Position = UDim2.new(0, 0, 0, 64)

    local layout = Instance.new("UIListLayout", holder)
    layout.Padding = UDim.new(0, 12)
    layout.SortOrder = Enum.SortOrder.LayoutOrder

    CreateToggle(holder, "Enable Fancy Mode", false, function(v) print("Fancy Mode:", v) end)
    CreateToggle(holder, "Notify on Events", true, function(v) print("Notify:", v) end)
end

-- Create menu buttons and hook them to pages
CreateMenuButton("Main", function() SwitchPage("Main") end)
CreateMenuButton("Settings", function() SwitchPage("Settings") end)

-- Default open
SwitchPage("Main")

-- Control buttons behavior
local isMin = false
local isMax = false
local previousSize = main.Size
local previousPos = main.Position

minBtn.MouseButton1Click:Connect(function()
    if not isMin then
        previousSize = main.Size
        previousPos = main.Position
        tween(main, {Size = UDim2.new(0, 420, 0, 44), Position = UDim2.new(0.05, 0, 0.05, 0)}, 0.18)
        isMin = true
    else
        tween(main, {Size = previousSize, Position = previousPos}, 0.18)
        isMin = false
    end
end)

maxBtn.MouseButton1Click:Connect(function()
    if not isMax then
        previousSize = main.Size
        previousPos = main.Position
        tween(main, {Size = UDim2.new(0.92, 0, 0.85, 0), Position = UDim2.new(0.04, 0, 0.04, 0)}, 0.2)
        isMax = true
    else
        tween(main, {Size = WINDOW_SIZE, Position = WINDOW_POS}, 0.2)
        isMax = false
    end
end)

closeBtn.MouseButton1Click:Connect(function()
    tween(main, {Position = UDim2.new(0.5, 0, 1.2, 0)}, 0.22)
    task.delay(0.22, function() main:Destroy() end)
end)

-- Alt key to toggle visibility quickly
UserInputService.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.LeftAlt then
        main.Visible = not main.Visible
    end
end)
